import * as React from "react";
import * as Types from "./types";

declare function DashboardPage(props: {
  as?: React.ElementType;
  titlePage?: React.ReactNode;
  clubName?: React.ReactNode;
  clubLogo?: Types.Asset.Image;
  disconnectButtonProps?: Types.Devlink.RuntimeProps;
  styleDashboard?: Types.Devlink.RuntimeProps;
  linkDashboard?: Types.Basic.Link;
  linkManage?: Types.Basic.Link;
  linkCalendar?: Types.Basic.Link;
  linkBilling?: Types.Basic.Link;
  linkClub?: Types.Basic.Link;
  linkSettings?: Types.Basic.Link;
  loader?: Types.Devlink.Slot;
  componentMonth?: Types.Devlink.Slot;
  componentYear?: Types.Devlink.Slot;
  nBookingsPlayPad?: React.ReactNode;
  nBookingsTotal?: React.ReactNode;
  revenuesTotal?: React.ReactNode;
  rateBookingPlayPad?: React.ReactNode;
  componentProgress?: Types.Devlink.Slot;
  isLoading?: Types.Visibility.VisibilityConditions;
  isNotLoading?: Types.Visibility.VisibilityConditions;
  nBookingslub?: React.ReactNode;
  revenuesClub?: React.ReactNode;
  revenuesPlayPad?: React.ReactNode;
  componentSite?: Types.Devlink.Slot;
  componentCourts?: Types.Devlink.Slot;
  revenuesTotalSite?: React.ReactNode;
  revenuesTotalCourt?: React.ReactNode;
  componentChartRateBooking?: Types.Devlink.Slot;
  componentChartRateHour?: Types.Devlink.Slot;
  componentChartRateTotal?: Types.Devlink.Slot;
  componentDays?: Types.Devlink.Slot;
  componentChartRevenues?: Types.Devlink.Slot;
  componentCardStats?: Types.Devlink.Slot;
  componentChartCountBySite?: Types.Devlink.Slot;
  componentChartCountCourt?: Types.Devlink.Slot;
  componentChartCountByCourt?: Types.Devlink.Slot;
  actionUpdate?: Types.Devlink.RuntimeProps;
  countHoursPlayPad?: React.ReactNode;
  countHoursClub?: React.ReactNode;
  countHoursTotal?: React.ReactNode;
  countUsersPlayPad?: React.ReactNode;
  countUsersClub?: React.ReactNode;
  countBookingsPlayPadStats?: React.ReactNode;
  countBookingsClubStats?: React.ReactNode;
  countBookingsTotalStats?: React.ReactNode;
  periodStats?: React.ReactNode;
  titleBookingsClub?: React.ReactNode;
  titleRevenuesClub?: React.ReactNode;
  visibleStat?: Types.Visibility.VisibilityConditions;
  visibleErrorStat?: Types.Visibility.VisibilityConditions;
  componentListBookings?: Types.Devlink.Slot;
  nAllBookings?: React.ReactNode;
  countUsersTotal?: React.ReactNode;
  showDialogEditBooking?: Types.Visibility.VisibilityConditions;
  styleDialogEditBooking?: Types.Devlink.RuntimeProps;
  editable?: Types.Visibility.VisibilityConditions;
  closeDialogBooking?: Types.Devlink.RuntimeProps;
  bookingDescription?: React.ReactNode;
  bookingDuration?: React.ReactNode;
  bookingMatchDate?: React.ReactNode;
  bookingSite?: React.ReactNode;
  bookingCourt?: React.ReactNode;
  bookingType?: React.ReactNode;
  clientEmail?: React.ReactNode;
  clientPhone?: React.ReactNode;
  clientName?: React.ReactNode;
  notEditable?: Types.Visibility.VisibilityConditions;
  accessCode?: React.ReactNode;
  transactionUid?: React.ReactNode;
  bookingUid?: React.ReactNode;
  isWebAppBooking?: Types.Visibility.VisibilityConditions;
  bookingCreatedDate?: React.ReactNode;
  hasTransaction?: Types.Visibility.VisibilityConditions;
  componentSwitch?: Types.Devlink.Slot;
  componentLogoClub?: Types.Devlink.Slot;
}): React.JSX.Element;
